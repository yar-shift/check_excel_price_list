function columnLetterToIndex(letter) {
  var column = 0;
  var length = letter.length;
  for (var i = 0; i < length; i++) {
    column += (letter.charCodeAt(i) - 64) * Math.pow(26, length - i - 1);
  }
  return column - 1;  // Индексы в Google Sheets начинаются с 0
}

function importData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheetSettings = ss.getSheetByName("Настройки");
  var sheetOrder = ss.getSheetByName("Потребность");

  if (!sheetSettings || !sheetOrder) {
    Logger.log("Ошибка: отсутствует один из листов (Настройки, Потребность).");
    return;
  }

  var settings = sheetSettings.getDataRange().getValues();
  sheetOrder.clear();
  sheetOrder.appendRow(["Артикул", "ШК", "Товар", "Количество", "Цена", "Валюта"]);  // Добавляем "Количество"

  var folder = DriveApp.getFolderById("1Z1UveqEIqy6IKmoS5-MADet2thbtvzMJ"); // ТУТ нужно указать ID Google Disk
  var files = folder.getFiles();

  // Структура для агрегации данных о поставщиках
  var suppliersData = {};

  // Сначала загружаем файлы согласно настройкам
  var fileNames = settings.map(function(row) { return row[1].trim(); });

  while (files.hasNext()) {
    var file = files.next();
    if (fileNames.indexOf(file.getName()) === -1) continue;  // Пропускаем файлы, которых нет в настройках

    var fileBlob = file.getBlob();
    var resource = { title: file.getName(), mimeType: MimeType.GOOGLE_SHEETS };
    var googleSheetFile = Drive.Files.insert(resource, fileBlob);
    var ssTemp = SpreadsheetApp.openById(googleSheetFile.id);

    Logger.log('Загружаем файл: ' + file.getName());

    // Сортируем строки настроек по порядку файлов, чтобы обрабатывать их в нужной очередности
    settings.forEach(function(setting, index) {
      var supplier = setting[0];
      var fileName = setting[1].trim();
      var sheetIndex = setting[2] ? parseInt(setting[2]) : 1;  // Получаем индекс листа (если не указан, по умолчанию 1)

      if (file.getName() !== fileName) return;

      // Проверяем, что индекс листа корректен
      var sheetCount = ssTemp.getSheets().length;
      if (sheetIndex < 1 || sheetIndex > sheetCount) {
        Logger.log('Ошибка: Лист с индексом ' + sheetIndex + ' не существует в файле ' + file.getName());
        return;
      }

      var sheetName = ssTemp.getSheets()[sheetIndex - 1].getName();  // Используем индекс, чтобы выбрать лист

      var artCol = columnLetterToIndex(setting[3]);
      var barcodeCol = setting[4] ? columnLetterToIndex(setting[4]) : null;
      var nameCol = setting[5] ? columnLetterToIndex(setting[5]) : null;
      var priceCol = setting[6] ? columnLetterToIndex(setting[6]) : null;
      var quantityCol = setting[7] ? columnLetterToIndex(setting[7]) : null;  // Новый столбец "Количество"
      var currency = setting[8] ? setting[8].trim() : "RUB";
      var rate = parseFloat(setting[9].toString().replace(",", ".")) || 1;
      var startRow = parseInt(setting[10]) || 1;
      var endRow = parseInt(setting[11]) || startRow;

      var sheet = ssTemp.getSheetByName(sheetName);
      if (!sheet) {
        Logger.log('Лист ' + sheetName + ' не найден в файле ' + file.getName());
        return;
      }

      Logger.log('Обрабатываем данные на листе ' + sheetName + ', строки с ' + startRow + ' по ' + endRow);

      try {
        var dataRange = sheet.getRange(startRow, 1, endRow - startRow + 1, sheet.getLastColumn());
        var data = dataRange.getValues();

        // Обрабатываем данные для поставщика
        if (!suppliersData[supplier]) {
          suppliersData[supplier] = []; // Инициализация массива для этого поставщика
        }

        for (var j = 0; j < data.length; j++) {
          var art = data[j][artCol] || "";
          var barcode = barcodeCol !== null ? data[j][barcodeCol] || "" : "";
          var name = nameCol !== null ? data[j][nameCol] || "" : "";
          var price = priceCol !== null ? data[j][priceCol] || "" : "";
          var quantity = quantityCol !== null ? data[j][quantityCol] || "" : "";  // Количество
          var priceInRub = (currency === "CNY" && price) ? price * rate : price;

          if (!art) continue; // Пропускаем пустые строки

          if (supplier === "Заказ") {
            sheetOrder.appendRow([art, barcode, name, quantity, priceInRub, currency]); // Загружаем заказы
          } else {
            suppliersData[supplier].push([art, barcode, name, priceInRub, "RUB"]); // Добавляем данные о товаре для поставщика
          }
        }
      } catch (e) {
        Logger.log('Ошибка при обработке данных на листе ' + sheetName + ': ' + e.message);
      }
    });

    DriveApp.getFileById(googleSheetFile.id).setTrashed(true);
  }

  // Теперь обрабатываем все собранные данные и заполняем сводную таблицу
  var sheetSummary = ss.getSheetByName("Сводная таблица");
  if (!sheetSummary) {
    sheetSummary = ss.insertSheet("Сводная таблица");
  }

  // Формируем заголовки сводной таблицы
  var headers = ["Артикул", "ШК", "Товар", "Количество"];
  var suppliers = Object.keys(suppliersData);

  suppliers.forEach(function(supplier) {
    if (supplier !== "Заказ") {  // Исключаем "Заказ" из сводной таблицы
      headers.push(supplier);
    }
  });

  sheetSummary.clear();
  sheetSummary.appendRow(headers);

  // Собираем все товары по артикулу
  var orderData = sheetOrder.getDataRange().getValues();
  var orderMap = {};

  // Сохраняем товары из заказа (по артикулу и ШК)
  for (var i = 1; i < orderData.length; i++) {
    var art = orderData[i][0] ? orderData[i][0].toString().trim() : "";
    var barcode = orderData[i][1] ? orderData[i][1].toString().trim() : "";
    var name = orderData[i][2] || "";
    var qty = orderData[i][3] || "";

    if (art) orderMap[art] = { barcode, name, qty, prices: {} };
    if (barcode) orderMap[barcode] = { barcode, name, qty, prices: {} };
  }

  // Заполняем цены поставщиков для каждого товара
  suppliers.forEach(function(supplier) {
    if (supplier === "Заказ") return;  // Исключаем "Заказ"
    var supplierData = suppliersData[supplier];
    supplierData.forEach(function(item) {
      var art = item[0];
      var barcode = item[1];
      var name = item[2];
      var price = item[3];

      if (orderMap[art]) {
        orderMap[art].prices[supplier] = price;
      }
      if (orderMap[barcode]) {
        orderMap[barcode].prices[supplier] = price;
      }
    });
  });

  // Формируем итоговую таблицу
  for (var key in orderMap) {
    var row = [
      key,
      orderMap[key].barcode,
      orderMap[key].name,
      orderMap[key].qty
    ];

    suppliers.forEach(function(supplier) {
      if (supplier !== "Заказ") {
        row.push(orderMap[key].prices[supplier] || ""); // Добавляем цену для каждого поставщика
      }
    });

    sheetSummary.appendRow(row);
  }

  Logger.log("Сводная таблица сформирована!");
}
